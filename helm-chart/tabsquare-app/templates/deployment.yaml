apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tabsquare-app.fullname" . }}
  labels:
    {{- include "tabsquare-app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- if .Values.updateStrategy }}
  strategy: {{ toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "tabsquare-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "tabsquare-app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "tabsquare-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ include "tabsquare-app.InitContainerName" . | quote }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.initContainers.image }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "/bin/ash"
            - "-c"
            - "until mysql --host=${DB_HOST} --user=${MYSQL_USER}
            --password=${MYSQL_PASSWORD} --execute=\"SELECT 1;\"; do echo waiting for mysql; sleep 2; done;"
          env:
            - name: DB_HOST
              value: {{ include "tabsquare.databaseHost" . | quote }}
            - name: MYSQL_USER
              value: {{ include "tabsquare.databaseUser" . | quote }}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "tabsquare.databaseSecretName" . }}
                  key: mysql-password
          {{- if .Values.nodeSelector }}
          nodeSelector:
    {{ toYaml .Values.nodeSelector | indent 8 }}
          {{- end }}
          {{- if .Values.affinity }}
          affinity:
    {{ toYaml .Values.affinity | indent 8 }}
          {{- end }}
          {{- if .Values.tolerations }}
          tolerations:
    {{ toYaml .Values.tolerations | indent 8 }}
          {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: APP_DB_HOST
              value: {{ include "tabsquare.databaseHost" . | quote }}
            - name: APP_DB_PORT
              value: {{ include "tabsquare.databasePort" . | quote }}
            - name: APP_DB_NAME
              value: {{ include "tabsquare.databaseName" . | quote }}
            - name: APP_DB_USERNAME
              value: {{ include "tabsquare.databaseUser" . | quote }}
            - name: APP_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "tabsquare.databaseSecretName" . }}
                  key: mysql-password
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            httpGet:
              path: /health
              port: http
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            httpGet:
              path: /health
              port: http
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
